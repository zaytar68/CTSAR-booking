@using Microsoft.Extensions.Localization
@inject IStringLocalizer<NotificationConfirmDialog> Loc

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Notifications" Class="mr-2"/>
            @Loc["Title"]
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudStack Spacing="3">
            <MudText Typo="Typo.body1">@Message</MudText>

            @if (AffectedUsers.Any())
            {
                <MudAlert Severity="Severity.Info" Dense="true">
                    @Loc["AffectedUsersCount", AffectedUsers.Count]
                </MudAlert>

                <MudPaper Elevation="0" Class="pa-3" Style="max-height: 200px; overflow-y: auto; background-color: var(--mud-palette-background-grey);">
                    <MudList T="string" Dense="true">
                        @foreach (var user in AffectedUsers)
                        {
                            <MudListItem T="string">
                                <MudIcon Icon="@(user.IsMoniteur ? Icons.Material.Filled.Shield : Icons.Material.Filled.Person)" Size="Size.Small" Class="mr-2"/>
                                @user.NomComplet
                            </MudListItem>
                        }
                    </MudList>
                </MudPaper>
            }
            else
            {
                <MudAlert Severity="Severity.Success" Dense="true">
                    @Loc["NoAffectedUsers"]
                </MudAlert>
            }
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="() => Close(false)">
            @Loc["DoNotNotify"]
        </MudButton>
        <MudButton Color="Color.Primary"
                   Variant="Variant.Filled"
                   OnClick="() => Close(true)"
                   Disabled="@(!AffectedUsers.Any())">
            <MudIcon Icon="@Icons.Material.Filled.Send" Size="Size.Small" Class="mr-1"/>
            @Loc["NotifyUsers"]
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    public MudBlazor.IDialogReference? DialogRef { get; set; }

    [Parameter]
    public string Message { get; set; } = string.Empty;

    [Parameter]
    public List<AffectedUserDto> AffectedUsers { get; set; } = new();

    private void Close(bool shouldNotify)
    {
        DialogRef?.Close(DialogResult.Ok(shouldNotify));
    }

    public class AffectedUserDto
    {
        public string UserId { get; set; } = string.Empty;
        public string NomComplet { get; set; } = string.Empty;
        public bool IsMoniteur { get; set; }
    }
}
