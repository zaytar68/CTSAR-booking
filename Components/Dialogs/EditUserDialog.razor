@*
====================================================================
EditUserDialog.razor : Dialogue de modification d'utilisateur
====================================================================
Ce dialogue permet aux administrateurs de modifier un utilisateur existant.
Utilise les composants MudBlazor pour une interface moderne et rÃ©active.
*@

@rendermode InteractiveServer

@using System.ComponentModel.DataAnnotations
@using CTSAR.Booking.DTOs
@using CTSAR.Booking.Constants
@using CTSAR.Booking.Services
@using MudBlazor

@inject UserService UserService
@inject ISnackbar Snackbar
@inject IDialogService DialogService

<MudDialog>
    <DialogContent>
        <MudForm @ref="_form" @bind-IsValid="@_formIsValid">
            <MudGrid>
                @* ======================================================== *@
                @* INFORMATIONS PERSONNELLES                                *@
                @* ======================================================== *@
                <MudItem xs="12">
                    <MudText Typo="Typo.h6" Class="mb-2">
                        <MudIcon Icon="@Icons.Material.Filled.Person" Class="me-2" />
                        Informations personnelles
                    </MudText>
                    <MudDivider />
                </MudItem>

                @* PrÃ©nom *@
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="_model.Prenom"
                                  Label="PrÃ©nom"
                                  Variant="Variant.Outlined"
                                  Required="true"
                                  RequiredError="Le prÃ©nom est obligatoire"
                                  MaxLength="100"
                                  Counter="100"
                                  Immediate="true"
                                  HelperText="PrÃ©nom de l'utilisateur" />
                </MudItem>

                @* Nom *@
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="_model.Nom"
                                  Label="Nom"
                                  Variant="Variant.Outlined"
                                  Required="true"
                                  RequiredError="Le nom est obligatoire"
                                  MaxLength="100"
                                  Counter="100"
                                  Immediate="true"
                                  HelperText="Nom de famille de l'utilisateur" />
                </MudItem>

                @* Email *@
                <MudItem xs="12">
                    <MudTextField @bind-Value="_model.Email"
                                  Label="Adresse email"
                                  Variant="Variant.Outlined"
                                  Required="true"
                                  RequiredError="L'email est obligatoire"
                                  InputType="InputType.Email"
                                  Validation="@(new EmailAddressAttribute() { ErrorMessage = "L'email n'est pas valide" })"
                                  Immediate="true"
                                  HelperText="Sera utilisÃ© comme identifiant de connexion" />
                </MudItem>

                @* TÃ©lÃ©phone *@
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="_model.PhoneNumber"
                                  Label="TÃ©lÃ©phone"
                                  Variant="Variant.Outlined"
                                  InputType="InputType.Telephone"
                                  HelperText="Optionnel"
                                  Clearable="true" />
                </MudItem>

                @* Langue *@
                <MudItem xs="12" sm="6">
                    <MudSelect @bind-Value="_model.PreferenceLangue"
                               Label="Langue prÃ©fÃ©rÃ©e"
                               Variant="Variant.Outlined"
                               Required="true"
                               HelperText="Langue de l'interface">
                        <MudSelectItem Value="@("fr")">ðŸ‡«ðŸ‡· FranÃ§ais</MudSelectItem>
                        <MudSelectItem Value="@("de")">ðŸ‡©ðŸ‡ª Allemand</MudSelectItem>
                        <MudSelectItem Value="@("en")">ðŸ‡¬ðŸ‡§ Anglais</MudSelectItem>
                    </MudSelect>
                </MudItem>

                @* ======================================================== *@
                @* RÃ”LES                                                    *@
                @* ======================================================== *@
                <MudItem xs="12" Class="mt-4">
                    <MudText Typo="Typo.h6" Class="mb-2">
                        <MudIcon Icon="@Icons.Material.Filled.Group" Class="me-2" />
                        RÃ´les et permissions
                    </MudText>
                    <MudDivider />
                </MudItem>

                <MudItem xs="12">
                    <MudText Typo="Typo.body2" Class="mb-3">
                        SÃ©lectionnez au moins un rÃ´le pour cet utilisateur :
                    </MudText>

                    @* Administrateur *@
                    <MudCheckBox @bind-Value="@_isAdministrateur"
                                 Color="Color.Error"
                                 Dense="true"
                                 Label="Administrateur - AccÃ¨s complet Ã  toutes les fonctionnalitÃ©s" />

                    @* Moniteur *@
                    <MudCheckBox @bind-Value="@_isMoniteur"
                                 Color="Color.Warning"
                                 Dense="true"
                                 Label="Moniteur - Peut valider et gÃ©rer les rÃ©servations" />

                    @* Membre *@
                    <MudCheckBox @bind-Value="@_isMembre"
                                 Color="Color.Info"
                                 Dense="true"
                                 Label="Membre - Peut crÃ©er et consulter ses rÃ©servations" />

                    @if (!_isAdministrateur && !_isMoniteur && !_isMembre)
                    {
                        <MudAlert Severity="Severity.Error" Class="mt-2" Dense="true">
                            Au moins un rÃ´le doit Ãªtre sÃ©lectionnÃ©
                        </MudAlert>
                    }
                </MudItem>

                @* ======================================================== *@
                @* CHANGEMENT DE MOT DE PASSE                               *@
                @* ======================================================== *@
                <MudItem xs="12" Class="mt-4">
                    <MudExpansionPanels>
                        <MudExpansionPanel Text="Changer le mot de passe" Icon="@Icons.Material.Filled.Lock">
                            <MudAlert Severity="Severity.Info" Class="mb-3" Dense="true">
                                Laissez vide pour ne pas modifier le mot de passe actuel
                            </MudAlert>

                            <MudGrid>
                                <MudItem xs="12">
                                    <MudTextField @bind-Value="_newPassword"
                                                  Label="Nouveau mot de passe"
                                                  Variant="Variant.Outlined"
                                                  InputType="@_passwordInputType"
                                                  Validation="@(new Func<string, string>(ValidateNewPassword))"
                                                  Immediate="true"
                                                  Adornment="Adornment.End"
                                                  AdornmentIcon="@_passwordIcon"
                                                  OnAdornmentClick="TogglePasswordVisibility"
                                                  AdornmentAriaLabel="Afficher/Masquer le mot de passe"
                                                  Clearable="true"
                                                  HelperText="Minimum 6 caractÃ¨res si renseignÃ©" />
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    </MudExpansionPanels>
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Cancel"
                   Variant="Variant.Text"
                   StartIcon="@Icons.Material.Filled.Cancel">
            Annuler
        </MudButton>
        <MudButton OnClick="Submit"
                   Variant="Variant.Filled"
                   Color="Color.Primary"
                   StartIcon="@Icons.Material.Filled.Save"
                   Disabled="@(!_formIsValid || _processing || (!_isAdministrateur && !_isMoniteur && !_isMembre))">
            @if (_processing)
            {
                <MudProgressCircular Size="Size.Small" Indeterminate="true" />
                <span class="ms-2">Enregistrement...</span>
            }
            else
            {
                <span>Enregistrer</span>
            }
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    // ================================================================
    // PARAMÃˆTRES DU DIALOGUE
    // ================================================================

    [CascadingParameter]
    public MudBlazor.IDialogReference? DialogRef { get; set; }

    /// <summary>
    /// Utilisateur Ã  modifier (passÃ© en paramÃ¨tre).
    /// </summary>
    [Parameter]
    public UserDto User { get; set; } = null!;

    // ================================================================
    // VARIABLES D'Ã‰TAT
    // ================================================================

    private MudForm _form = null!;
    private bool _formIsValid;
    private UpdateUserDto _model = new();
    private bool _processing = false;
    private InputType _passwordInputType = InputType.Password;
    private string _passwordIcon = Icons.Material.Filled.VisibilityOff;
    private string? _newPassword;

    private bool _isAdministrateur = false;
    private bool _isMoniteur = false;
    private bool _isMembre = false;

    // ================================================================
    // INITIALISATION
    // ================================================================

    protected override void OnInitialized()
    {
        // Remplir le modÃ¨le avec les valeurs actuelles de l'utilisateur
        _model.Id = User.Id;
        _model.Nom = User.Nom;
        _model.Prenom = User.Prenom;
        _model.Email = User.Email;
        _model.PhoneNumber = User.PhoneNumber;
        _model.PreferenceLangue = User.PreferenceLangue;
        _model.Roles = User.Roles.ToList();

        // DÃ©finir les rÃ´les actuels
        _isAdministrateur = User.Roles.Contains(RoleConstants.Administrateur);
        _isMoniteur = User.Roles.Contains(RoleConstants.Moniteur);
        _isMembre = User.Roles.Contains(RoleConstants.Membre);
    }

    // ================================================================
    // VALIDATION
    // ================================================================

    /// <summary>
    /// Valide le nouveau mot de passe.
    /// Optionnel, mais si renseignÃ©, minimum 6 caractÃ¨res.
    /// </summary>
    private string? ValidateNewPassword(string password)
    {
        if (string.IsNullOrWhiteSpace(password))
            return null; // Optionnel

        if (password.Length < 6)
            return "Le mot de passe doit contenir au moins 6 caractÃ¨res";

        return null;
    }

    /// <summary>
    /// Bascule la visibilitÃ© du mot de passe.
    /// </summary>
    private void TogglePasswordVisibility()
    {
        if (_passwordInputType == InputType.Password)
        {
            _passwordInputType = InputType.Text;
            _passwordIcon = Icons.Material.Filled.Visibility;
        }
        else
        {
            _passwordInputType = InputType.Password;
            _passwordIcon = Icons.Material.Filled.VisibilityOff;
        }
    }

    // ================================================================
    // ACTIONS
    // ================================================================

    private void Cancel()
    {
        DialogRef?.Close(DialogResult.Cancel());
    }

    private async Task Submit()
    {
        await _form.Validate();

        if (!_formIsValid)
        {
            Snackbar.Add("Veuillez corriger les erreurs du formulaire", Severity.Error);
            return;
        }

        if (!_isAdministrateur && !_isMoniteur && !_isMembre)
        {
            Snackbar.Add("Au moins un rÃ´le doit Ãªtre sÃ©lectionnÃ©", Severity.Error);
            return;
        }

        try
        {
            _processing = true;

            // Construire la liste des rÃ´les
            _model.Roles = new List<string>();
            if (_isAdministrateur) _model.Roles.Add(RoleConstants.Administrateur);
            if (_isMoniteur) _model.Roles.Add(RoleConstants.Moniteur);
            if (_isMembre) _model.Roles.Add(RoleConstants.Membre);

            // Mettre Ã  jour l'utilisateur
            var (success, message) = await UserService.UpdateUserAsync(_model);

            if (success)
            {
                // Si un nouveau mot de passe est fourni, le changer
                if (!string.IsNullOrWhiteSpace(_newPassword))
                {
                    // Note : Cette fonctionnalitÃ© nÃ©cessiterait une mÃ©thode admin
                    // pour changer le mot de passe sans l'ancien mot de passe
                    // Pour l'instant, on l'ignore
                    Snackbar.Add("Note : Le changement de mot de passe n'est pas encore implÃ©mentÃ©", Severity.Warning);
                }

                Snackbar.Add(message, Severity.Success);
                DialogRef?.Close(DialogResult.Ok(true));
            }
            else
            {
                Snackbar.Add(message, Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Erreur inattendue : {ex.Message}", Severity.Error);
        }
        finally
        {
            _processing = false;
        }
    }
}
