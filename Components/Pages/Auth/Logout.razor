@page "/logout"
@rendermode InteractiveServer

@using CTSAR.Booking.Services
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies

@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation
@inject IHttpContextAccessor HttpContextAccessor

<PageTitle>Déconnexion</PageTitle>

@code {
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Se déconnecter du cookie
            var httpContext = HttpContextAccessor.HttpContext;
            if (httpContext != null)
            {
                await httpContext.SignOutAsync(CookieAuthenticationDefaults.AuthenticationScheme);
            }

            // Mettre à jour l'état d'authentification
            if (AuthStateProvider is CustomAuthenticationStateProvider customProvider)
            {
                customProvider.MarkUserAsLoggedOut();
            }

            // Rediriger vers la page de login
            Navigation.NavigateTo("/login", forceLoad: true);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erreur lors de la déconnexion : {ex.Message}");
            Navigation.NavigateTo("/login", forceLoad: true);
        }
    }
}
