@*
====================================================================
NavMenu.razor : Menu de navigation principal de l'application
====================================================================
Ce composant affiche le menu latéral avec tous les liens de navigation.
Le menu s'adapte selon les permissions de l'utilisateur (AuthorizeView).
*@

@implements IDisposable

@inject NavigationManager NavigationManager

@* ================================================================ *@
@* MUDBLAZOR DRAWER AVEC MUDNAVMENU                                 *@
@* ================================================================ *@
<MudNavMenu Style="background: linear-gradient(to bottom, #808080, #d3d3d3); min-height: 100vh;">
    @* ======================================================== *@
    @* EN-TÊTE DU MENU                                          *@
    @* ======================================================== *@
    <MudText Typo="Typo.h6" Class="px-4 py-3">CTSAR Booking</MudText>
    <MudDivider />

    @* ======================================================== *@
    @* NAVIGATION PRINCIPALE (accessible à tous)               *@
    @* ======================================================== *@
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">
        Accueil
    </MudNavLink>

    @* ======================================================== *@
    @* SECTION ADMINISTRATION (visible pour les Administrateurs uniquement) *@
    @* ======================================================== *@
    <AuthorizeView Policy="AdminOnly">
        <Authorized>
            <MudDivider Class="my-2" />
            <MudText Typo="Typo.caption" Class="px-4 py-2 mud-text-secondary">ADMINISTRATION</MudText>

            <MudNavLink Href="admin/utilisateurs" Icon="@Icons.Material.Filled.People">
                Gestion utilisateurs
            </MudNavLink>
        </Authorized>
    </AuthorizeView>

    @* ======================================================== *@
    @* SECTION UTILISATEUR (connexion/déconnexion)             *@
    @* ======================================================== *@
    <AuthorizeView>
        <Authorized>
            @* Utilisateur connecté *@
            <MudDivider Class="my-2" />
            <MudText Typo="Typo.caption" Class="px-4 py-2 mud-text-secondary">COMPTE</MudText>

            <MudNavLink Href="mon-profil" Icon="@Icons.Material.Filled.Person">
                Mon profil
            </MudNavLink>

            <MudNavLink OnClick="@(() => { })" Icon="@Icons.Material.Filled.Logout">
                <form action="Account/Logout" method="post" style="display: inline;">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <button type="submit" style="background: none; border: none; cursor: pointer; padding: 0; color: inherit; text-align: left; width: 100%;">
                        Déconnexion
                    </button>
                </form>
            </MudNavLink>
        </Authorized>

        <NotAuthorized>
            @* Utilisateur non connecté *@
            <MudDivider Class="my-2" />
            <MudText Typo="Typo.caption" Class="px-4 py-2 mud-text-secondary">CONNEXION</MudText>

            <MudNavLink Href="Account/Register" Icon="@Icons.Material.Filled.PersonAdd">
                S'inscrire
            </MudNavLink>

            <MudNavLink Href="Account/Login" Icon="@Icons.Material.Filled.Login">
                Se connecter
            </MudNavLink>
        </NotAuthorized>
    </AuthorizeView>
</MudNavMenu>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

