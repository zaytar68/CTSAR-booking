@*
====================================================================
NavMenu.razor : Menu de navigation principal de l'application
====================================================================
Ce composant affiche le menu latéral avec tous les liens de navigation.
Le menu s'adapte selon les permissions de l'utilisateur (AuthorizeView).
*@

@implements IDisposable

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.Extensions.Localization
@using System.Security.Claims
@inject IStringLocalizer<NavMenu> Loc
@inject IStringLocalizer<CTSAR.Booking.Resources.Shared> SharedLoc

@* ================================================================ *@
@* MUDBLAZOR DRAWER AVEC MUDNAVMENU                                 *@
@* ================================================================ *@
<MudNavMenu Class="nav-menu-background" Style="min-height: 100vh;">
    @* ======================================================== *@
    @* EN-TÊTE DU MENU                                          *@
    @* ======================================================== *@
    <MudText Typo="Typo.h6" Class="px-4 py-3">CTSAR Booking</MudText>

    @* Affichage des informations utilisateur *@
    <AuthorizeView>
        <Authorized>
            @if (!string.IsNullOrEmpty(_userDisplayName))
            {
                <div class="px-4 py-2" style="background-color: rgba(0,0,0,0.05);">
                    <MudText Typo="Typo.body2"><strong>@GetWelcomeText()</strong></MudText>
                    <MudText Typo="Typo.body2">@_userDisplayName</MudText>
                    @if (!string.IsNullOrEmpty(_userRole))
                    {
                        <MudText Typo="Typo.caption" Class="mud-text-secondary">@_userRole</MudText>
                    }
                </div>
            }
        </Authorized>
    </AuthorizeView>

    <MudDivider />

    @* ======================================================== *@
    @* NAVIGATION PRINCIPALE (accessible à tous)               *@
    @* ======================================================== *@
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">
        @Loc["Home"]
    </MudNavLink>

    <AuthorizeView>
        <Authorized>
            <MudNavLink Href="planning" Icon="@Icons.Material.Filled.CalendarMonth">
                @Loc["Planning"]
            </MudNavLink>
        </Authorized>
    </AuthorizeView>

    @* ======================================================== *@
    @* SECTION ADMINISTRATION (visible pour les Administrateurs uniquement) *@
    @* ======================================================== *@
    <AuthorizeView Policy="AdminOnly">
        <Authorized>
            <MudDivider Class="my-2" />
            <MudText Typo="Typo.caption" Class="px-4 py-2 mud-text-secondary">@Loc["Administration"]</MudText>

            <MudNavLink Href="admin/utilisateurs" Icon="@Icons.Material.Filled.People">
                @Loc["Users"]
            </MudNavLink>

            <MudNavLink Href="admin/alveoles" Icon="@Icons.Material.Filled.GridView">
                @Loc["Lanes"]
            </MudNavLink>
        </Authorized>
    </AuthorizeView>

    @* ======================================================== *@
    @* SECTION UTILISATEUR (connexion/déconnexion)             *@
    @* ======================================================== *@
    <AuthorizeView>
        <Authorized>
            @* Utilisateur connecté *@
            <MudDivider Class="my-2" />
            <MudText Typo="Typo.caption" Class="px-4 py-2 mud-text-secondary">@Loc["Account"]</MudText>

            <MudNavLink Href="mon-profil" Icon="@Icons.Material.Filled.Person">
                @Loc["MyProfile"]
            </MudNavLink>

            @* Utiliser un <a> HTML pur pour forcer une navigation complète *@
            <a href="/api/auth/logout-page" class="mud-nav-link" style="display: flex; align-items: center; padding: 6px 16px; text-decoration: none; color: inherit;">
                <MudIcon Icon="@Icons.Material.Filled.Logout" Style="margin-right: 16px;" />
                @SharedLoc["Logout"]
            </a>
        </Authorized>

        <NotAuthorized>
            @* Utilisateur non connecté *@
            <MudDivider Class="my-2" />
            <MudText Typo="Typo.caption" Class="px-4 py-2 mud-text-secondary">@Loc["Connection"]</MudText>

            <MudNavLink Href="register" Icon="@Icons.Material.Filled.PersonAdd">
                @SharedLoc["Register"]
            </MudNavLink>

            <MudNavLink Href="login" Icon="@Icons.Material.Filled.Login">
                @SharedLoc["Login"]
            </MudNavLink>
        </NotAuthorized>
    </AuthorizeView>
</MudNavMenu>

@code {
    private string? currentUrl;
    private string? _userDisplayName;
    private string? _userRole;

    protected override async Task OnInitializedAsync()
    {
        // Récupérer les informations de l'utilisateur connecté
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            var prenom = user.FindFirst(ClaimTypes.GivenName)?.Value;
            var nom = user.FindFirst(ClaimTypes.Surname)?.Value;
            _userDisplayName = $"{prenom} {nom}";
            _userRole = user.FindFirst(ClaimTypes.Role)?.Value;
        }

        // Continuer avec l'initialisation du NavigationManager
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    private string GetWelcomeText()
    {
        // Retourne directement la traduction basée sur la culture actuelle
        var culture = System.Globalization.CultureInfo.CurrentCulture.Name;
        return culture switch
        {
            "de" => "Willkommen",
            "en" => "Welcome",
            _ => "Bienvenue"
        };
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
