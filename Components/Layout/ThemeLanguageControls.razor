@*
====================================================================
ThemeLanguageControls.razor : Contrôles de thème et langue
====================================================================
Ce composant affiche le sélecteur de langue et le switch de thème.
*@

@rendermode InteractiveServer
@inject ThemeService ThemeService
@inject NavigationManager NavigationManager
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<CTSAR.Booking.Resources.Shared> Loc

<MudStack Row="true" Spacing="3" AlignItems="AlignItems.Center" Justify="Justify.FlexEnd">
    @* Sélecteur de langue *@
    <MudSelect T="string" Value="@ThemeService.SelectedLanguage" ValueChanged="@OnLanguageChanged"
               Variant="Variant.Outlined" Dense="true"
               Style="width: 120px;" AnchorOrigin="Origin.BottomCenter">
        <MudSelectItem Value="@("fr")">Français</MudSelectItem>
        <MudSelectItem Value="@("de")">Deutsch</MudSelectItem>
        <MudSelectItem Value="@("en")">English</MudSelectItem>
    </MudSelect>

    @* Switch thème clair/foncé *@
    <MudTooltip Text="@(ThemeService.IsDarkMode ? Loc["LightMode"] : Loc["DarkMode"])">
        <MudIconButton Icon="@(ThemeService.IsDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)"
                       Color="Color.Inherit"
                       OnClick="@ToggleTheme" />
    </MudTooltip>
</MudStack>

@code {
    protected override void OnInitialized()
    {
        ThemeService.OnThemeChanged += StateHasChanged;
        ThemeService.OnLanguageChanged += StateHasChanged;
    }

    private async Task ToggleTheme()
    {
        await ThemeService.ToggleThemeAsync();
    }

    private async Task OnLanguageChanged(string newLanguage)
    {
        await ThemeService.SetLanguageAsync(newLanguage);

        // Recharger la page pour appliquer la nouvelle langue
        // Nécessaire en Blazor Server car la culture est définie au niveau du serveur
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

    public void Dispose()
    {
        ThemeService.OnThemeChanged -= StateHasChanged;
        ThemeService.OnLanguageChanged -= StateHasChanged;
    }
}
